# Core settings
[user]
	name = Sebastian Wiesner
	useconfigonly = true
[gpg]
	# SSH keys are so much easier to use than the abomination that is GPG
	format = ssh
[gpg.ssh]
	# Set a default file for me to keep my trustlist at
	allowedSignersFile = ~/.config/git/allowed-signers
[init]
	# No masters no more
	defaultBranch = main
[branch]
	autoSetupRebase = always
	sort = -authordate
[status]
	# Short git status output, but include branch info
	short = true
	branch = true
# Checkout
[checkout]
	# Always checkout remote branches from origin even if the remote branch exists in multiple remotes
	defaultRemote = origin
# Commit and tag settings
[commit]
	# Sign commits (though we use SSH, see above)
	gpgSign = true
[tag]
	sort = -version:refname
	# Sign tags (again, SSH, not GPG)
	gpgSign = true
# Rebasing and merging
[rebase]
	# Automatically squash with certain commit message prefixes
	autoSquash = true
	# Automatically stash before rebasing
	autoStash = true
[merge]
	# Include summary commit messages in git merge commit message
	log = true
[mergetool]
	# Do not prompt before every single merge and do not keep *.orig files
	# around after the merge
	prompt = false
	keepBackup = false
[rerere]
	# Track and remember conflict resolutions for replaying them, see
	# https://git-scm.com/blog/2010/03/08/rerere.html
	enabled = true
# Diffing and logging
[diff]
	# Use more mnemonic path prefixes for either side of the diff
	mnemonicprefix = true
	# This algorithm generates better diffs in my opinion.
	# See https://stackoverflow.com/a/32367597/355252
	algorithm = histogram
[diff "rust"]
	xfuncname = "^[ \t]*(pub|)[ \t]*((fn|struct|enum|impl|trait|mod)[^;]*)$"
[log]
	# Abbreviate hashes in git log
	abbrevCommit = true
	# Always show signatures; a nice idea in theory, but practically it
        # breaks a lot of git tools, e.g. neogit, see https://github.com/TimUntersberger/neogit/issues/422
	# showSignature = true
[pretty]
	fancy = %C(bold)Commit:%C(reset) %C(green)%H%C(red)%d%n%C(bold)Author:%C(reset) %C(cyan)%an <%ae>%n%C(bold)Date:%C(reset)   %C(blue)%ai (%ar)%C(reset)%n%+B
	overview = %C(green)%h%C(reset) %s%n%C(blue)(%ar by %an)%C(red)%d%C(reset)%n
# Transfer settings
[transfer]
	# Check transferred objects
	fsckObjects = true
# Remotes
[remote]
	pushDefault = origin
[fetch]
	# Always prune dead branches
	prune = true
[push]
	# Push annotated tag reachable from pushed commits
	followTags = true
	# Sign pushes if the server asks for it
	gpgSign = if-asked
# UI
[color]
	diff = auto
	status = auto
	branch = auto
	ui = auto
# Submodules
[submodule]
	# Fetch submodules in parallel, with a reasonable number of jobs
	fetchJobs = 0
[alias]
	# All day every day shortcuts
	a = add
	bl = branch
	bla = branch -a
	c = commit
	ca = commit --amend
	cfm = commit --amend --reuse-message=HEAD
	cm = commit --message
	d = diff
	dt = difftool
	f = fetch
	fa = fetch --all
	# Prune gone upstream branches
	gX = gone prune
	# Fancy and brief logs
	l = log --pretty=fancy --topo-order --graph --show-signature
	lo = log --pretty=overview --topo-order --graph
	# Show most recent commits and commits within the last week
	l7d = log --pretty=overview --topo-order --graph --since '7 days ago'
	l24 = log --pretty=overview --topo-order --graph --since '24 hours ago'
	mff = merge --ff-only
	mnoff = merge --no-ff
	mt = mergetool
	p = push
	pf = push --force-with-lease
	pu = push --set-upstream
	r = restore
	reb = rebase
	rebi = rebase -i
	rebc = rebase --continue
	reba = rebase --abort
	s = status
	sw = switch
	swc = switch -c
	swD = switch --detach
	# Submodules
	sub = submodule
	subs = submodule sync --recursive
	subu = submodule update --init --recursive
	# Get the current branch
	current = symbolic-ref --short HEAD
	# Get the root directory
	root = rev-parse --show-toplevel
	# Manage my Git identity
	whoami = config user.email
	iam = config user.email
	# Quickly serve repo over path
	serve = daemon --verbose --export-all --base-path=.git --reuseaddr --strict-paths .git/
[url "https://"]
	# Force HTTPS URLs
	insteadOf = http://
# Includes
[include]
	# 1password commit signing
	path = config.1password-signing
	# Platform specific settings
	path = config.linux
	path = config.windows
	# Local settings for this system
	path = config.local
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
