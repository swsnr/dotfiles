#!/bin/bash
# Copyright 2020 Sebastian Wiesner <sebastian@swsnr.de>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

set -euo pipefail

ENV_FILE="${XDG_RUNTIME_DIR}/lunaryorn-gnome-terminal-env"

if [[ -f "$ENV_FILE" ]]; then
    source "$ENV_FILE"
fi

# Check if the stored terminal screen actually exists; otherwise start a fresh screen
if busctl --user tree "$GNOME_TERMINAL_SERVICE" --list | grep -Fq "$GNOME_TERMINAL_SCREEN"; then
    export GNOME_TERMINAL_SERVICE
    export GNOME_TERMINAL_SCREEN
    gnome-terminal --tab -p > "$ENV_FILE"

    # Activate the terminal window; we don't need to do this when starting a fresh terminal
    # server because in this case it'll activate itself automatically
    gdbus call \
    --session \
    --dest org.gnome.Shell \
    --object-path /org/gnome/Shell \
    --method org.gnome.Shell.Eval "
    const window = global.get_window_actors().map(a=>a.meta_window).find(w=>w.get_wm_class() === 'gnome-terminal-server')
    window && window.activate(0)"
else
    unset GNOME_TERMINAL_SERVICE
    unset GNOME_TERMINAL_SCREEN
    gnome-terminal -p > "$ENV_FILE"
fi
