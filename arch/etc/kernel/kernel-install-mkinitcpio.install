#!/usr/bin/env bash
# SPDX-License-Identifier: GPL-2.0-only

COMMAND="${1:?}"
KERNEL_VERSION="${2:?}"
ENTRY_DIR_ABS="$3"
KERNEL_IMAGE="$4"

if [[ -n "$KERNEL_INSTALL_INITRD_GENERATOR" && "$KERNEL_INSTALL_INITRD_GENERATOR" != mkinitcpio ]]; then
    exit 0
fi

MICROCODE=()
KERNEL_IMAGE_FLAGS=()
case "$KERNEL_INSTALL_LAYOUT" in
    uki)
        # Generate UKI in staging area; 90-uki-copy will then copy it to /efi
        # with the appropriate name.
        IMAGE_PATH="$KERNEL_INSTALL_STAGING_AREA/uki.efi"
        IMAGE_GENERATION_FLAG="-U"

        # autodetecting microcode images by known location
        # They're from GRUB_EARLY_INITRD_LINUX_STOCK in https://git.savannah.gnu.org/cgit/grub.git/tree/util/grub-mkconfig.in.
        for ucode_name in "intel-ucode.img" "amd-ucode.img" "intel-uc.img" "amd-uc.img" "early_ucode.cpio" "microcode.cpio"; do
            if [[ -e "/boot/$ucode_name" ]]; then
                (( KERNEL_INSTALL_VERBOSE )) && echo "Found microcode image /boot/$ucode_name"
                MICROCODE+=(--microcode "/boot/$ucode_name")
            elif [[ -e "$KERNEL_INSTALL_BOOT_ROOT/$ucode_name" ]]; then
                (( KERNEL_INSTALL_VERBOSE )) && echo "Found microcode image /boot/$ucode_name"
                MICROCODE+=(--microcode "$KERNEL_INSTALL_BOOT_ROOT/$ucode_name")
            fi
        done

        KERNEL_IMAGE_FLAGS=(--kernelimage "$KERNEL_IMAGE")
        ;;
    bls)
        IMAGE_GENERATION_FLAG="-g"
        IMAGE_PATH="$ENTRY_DIR_ABS/initrd"
        ;;
    *)
        exit 0
        ;;
esac

case $COMMAND in
    add)
        (( KERNEL_INSTALL_VERBOSE )) && echo "+ mkinitcpio -k '$KERNEL_VERSION'" "${KERNEL_IMAGE_FLAGS[@]}" "${MICROCODE[@]}" "$IMAGE_GENERATION_FLAG '$IMAGE_PATH'"
        #shellcheck disable=SC2046
        mkinitcpio -k "$KERNEL_VERSION" "${KERNEL_IMAGE_FLAGS[@]}" "${MICROCODE[@]}" "$IMAGE_GENERATION_FLAG" "$IMAGE_PATH"
        ;;
    remove)
        # For UKI layout removal of kernel images is handled by 90-uki-copy
        # shipped with kernel-install itself.
        if [[ "$KERNEL_INSTALL_LAYOUT" == "bls" ]]; then
            printf "For BLS layout only the loader entry is removed during removal.\n"
            printf "The image files (kernel, initramfs, etc) are left behind on the ESP partition, at: '%s'\n" "$ENTRY_DIR_ABS"
        fi
        ;;
esac

# vim: set ft=sh ts=4 sw=4 et:
